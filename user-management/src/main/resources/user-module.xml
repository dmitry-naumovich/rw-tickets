<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" 
"http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="url">
			<value>${database.url}</value>
		</property>
		<property name="driverClassName">
			<value>${database.driverClassName}</value>
		</property>
		<property name="username">
			<value>${database.username}</value>
		</property>
		<property name="password">
			<value>${database.password}</value>
		</property>
	</bean>
	
	<bean id="userDao" class="by.epam.naumovich.rw_tickets.dao.impl.UserDAOImpl">
		<constructor-arg>
			<ref bean="dataSource"/>
		</constructor-arg>
	</bean>
	<bean id="groupDao" class="by.epam.naumovich.rw_tickets.dao.impl.GroupDAOImpl">
		<constructor-arg>
			<ref bean="dataSource"/>
		</constructor-arg>
	</bean>
	<bean id="requestDao" class="by.epam.naumovich.rw_tickets.dao.impl.RequestDAOImpl">
		<constructor-arg>
			<ref bean="dataSource"/>
		</constructor-arg>
	</bean>
	
	<bean id="userServiceTarget" class="by.epam.naumovich.rw_tickets.service.impl.UserServiceImpl">
		<property name="userDAO"><ref bean="userDao"/></property>
		<property name="groupDAO"><ref bean="groupDao"/></property>
	</bean>
	<bean id="groupServiceTarget" class="by.epam.naumovich.rw_tickets.service.impl.GroupServiceImpl">
		<property name="groupDAO"><ref bean="groupDao"/></property>
	</bean>
	<bean id="requestServiceTarget" class="by.epam.naumovich.rw_tickets.service.impl.RequestServiceImpl">
		<property name="requestDAO"><ref bean="requestDao"/></property>
	</bean>
	
	
	<bean id="loggingBeforeAdvice" class="by.epam.naumovich.rw_tickets.service.aop.LoggingBeforeAdvice" />
	<bean id="loggingAfterAdvice" class="by.epam.naumovich.rw_tickets.service.aop.LoggingAfterAdvice" />
	<bean id="loggingThrowsAdvice" class="by.epam.naumovich.rw_tickets.service.aop.LoggingThrowsAdvice"/>
	
	<bean id="transactionAttributeSource" class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly,-ServiceException</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly,-ServiceException</prop>
				<prop key="authenticate*">PROPAGATION_REQUIRED,readOnly,-ServiceException</prop>
				<prop key="*">PROPAGATION_REQUIRED,-ServiceException</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource">
    		<ref bean="dataSource"/>
    	</property>
    </bean>
    
	<bean id="userService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" >
		<property name="proxyInterfaces">
			<list>
				<value>by.epam.naumovich.rw_tickets.service.iface.IUserService</value>
			</list>
		</property>
		<property name="target">
			<ref bean="userServiceTarget"/>
		</property>
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="transactionAttributeSource">
			<ref bean="transactionAttributeSource"/>
		</property>
		<property name="preInterceptors">
			<list>
		        <ref bean="loggingBeforeAdvice"/>
		        <ref bean="loggingAfterAdvice"/>
		        <ref bean="loggingThrowsAdvice"/>
    		</list>
		</property>
	</bean>
	
	<bean id="groupService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="proxyInterfaces">
			<list>
				<value>by.epam.naumovich.rw_tickets.service.iface.IGroupService</value>
			</list>
		</property>
		<property name="target">
			<ref bean="groupServiceTarget"/>
		</property>
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="transactionAttributeSource">
			<ref bean="transactionAttributeSource"/>
		</property>
		<property name="preInterceptors">
			<list>
		        <ref bean="loggingBeforeAdvice"/>
		        <ref bean="loggingAfterAdvice"/>
		        <ref bean="loggingThrowsAdvice"/>
    		</list>
		</property>
	</bean>

	<bean id="requestService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="proxyInterfaces"> 
			<list>
				<value>by.epam.naumovich.rw_tickets.service.iface.IRequestService</value>
			</list>
		</property>
		<property name="target">
			<ref bean="requestServiceTarget"/>
		</property>
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="transactionAttributeSource">
			<ref bean="transactionAttributeSource"/>
		</property>
		<property name="preInterceptors">
			<list>
		        <ref bean="loggingBeforeAdvice"/>
		        <ref bean="loggingAfterAdvice"/>
		        <ref bean="loggingThrowsAdvice"/>
    		</list>
		</property>
	</bean>
	
	<bean id="serviceFacade" class="by.epam.naumovich.rw_tickets.service.ServiceFacade">
		<property name="userService"><ref bean="userService"/></property>
		<property name="groupService"><ref bean="groupService"/></property>
		<property name="requestService"><ref bean="requestService"/></property>
	</bean>
</beans>